# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to also put the following lines in your .gitignore file:
.idea/

# VSCode
.vscode/
*.code-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# OS files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
desktop.ini

# Application specific
logs/
*.log
*.log.*
log/

# Data directories
data/
cache/
tmp/
temp/

# Backup files
backups/
*.bak
*.backup
*.tar.gz
*.zip

# Performance test results
performance_test_results_*.json
performance_reports/

# Browser automation
.playwright/
playwright-report/
test-results/

# Docker
.dockerignore
docker-compose.override.yml
docker-compose.local.yml

# Kubernetes
*.kubeconfig
k8s-secrets.yml

# SSL certificates
*.pem
*.key
*.crt
*.csr
ssl/
certs/

# Monitoring data
prometheus-data/
grafana-data/
monitoring/data/

# Redis data
dump.rdb
appendonly.aof
redis-data/

# Database files
*.db
*.sqlite
*.sqlite3
db_data/
postgres-data/

# Secrets and keys
secrets/
.secrets/
*.secret
api-keys.txt
service-account.json

# Configuration overrides
.env.local
.env.development
.env.test
.env.production
config.local.json
settings.local.py

# Profiling
*.prof
*.profile
*.trace

# Memory profiling
*.mprofile

# Coverage reports
htmlcov/
.coverage.*
coverage.xml

# Load testing
artillery_*.json
k6_results.json

# CI/CD artifacts
.github/workflows/*.local.yml
.gitlab-ci.local.yml

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# Ansible
*.retry
inventory.local

# Vagrant
.vagrant/

# Cloud deployment
.gcloudignore
.aws/
.azure/

# IDE configurations
.vscode/settings.json
.vscode/launch.json
.idea/workspace.xml
.idea/tasks.xml

# Documentation build
site/
docs/_build/
docs/build/

# Temporary files
*.tmp
*.temp
*.swp
*.swo

# Application logs
app.log
error.log
access.log
debug.log
crawl4ai.log

# Metrics and monitoring
metrics.txt
stats.json

# API documentation
api-docs/
openapi-generated/

# Example files that shouldn't be committed
examples/output/
examples/results/
examples/*.local.*

# User-specific files
user-config.yml
personal-notes.md
scratch/
playground/

# Large files that shouldn't be in git
*.dump
*.sql.gz
large-dataset/

# Machine learning models
*.model
*.pkl
*.joblib

# Jupyter notebooks with outputs
*.ipynb

# Python wheels
*.whl

# Compiled translations
*.mo

# Sphinx documentation
docs/_build/

# Package files
*.deb
*.rpm
*.pkg
*.dmg

# Archive files
*.tar
*.tar.gz
*.tar.bz2
*.tgz
*.zip
*.rar
*.7z

# Media files (if any)
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.mp3
*.wav
*.jpg
*.jpeg
*.png
*.gif
*.bmp
*.tiff
*.pdf

# Don't ignore these important files
!requirements*.txt
!Dockerfile*
!docker-compose*.yml
!.env.example
!.github/workflows/
!docs/
!examples/README.md
!monitoring/prometheus.yml
!monitoring/grafana/
!nginx/nginx.conf

__pycache__/